// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TelegramBot.Persistence.src.Data;

#nullable disable

namespace TelegramBot.Persistence.Migrations
{
    [DbContext(typeof(TelegramBotDbContext))]
    [Migration("20241122162042_Aboba")]
    partial class Aboba
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Articles_Housing_Code", b =>
                {
                    b.Property<int>("id_articles_housing_code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_articles_housing_code"));

                    b.Property<string>("articles_housing_code_content")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("articles_housing_code_name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("id_housing_and_communal_services")
                        .HasColumnType("int");

                    b.HasKey("id_articles_housing_code");

                    b.HasIndex("id_articles_housing_code")
                        .IsUnique();

                    b.HasIndex("id_housing_and_communal_services");

                    b.ToTable("Articles_Housing_Code");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Education", b =>
                {
                    b.Property<int>("id_education")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_education"));

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("text_of_request")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id_education");

                    b.HasIndex("id_education")
                        .IsUnique();

                    b.ToTable("Education");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Healthcare", b =>
                {
                    b.Property<int>("id_healthcare")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_healthcare"));

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("text_of_request")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id_healthcare");

                    b.HasIndex("id_healthcare")
                        .IsUnique();

                    b.ToTable("Healthcare");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Housing_And_Communal_Services", b =>
                {
                    b.Property<int>("id_housing_and_communal_services")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_housing_and_communal_services"));

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("text_of_request")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id_housing_and_communal_services");

                    b.HasIndex("id_housing_and_communal_services")
                        .IsUnique();

                    b.ToTable("Housing_And_Communal_Services");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Meter_Readings", b =>
                {
                    b.Property<int>("id_meter_readings")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_meter_readings"));

                    b.Property<int?>("id_housing_and_communal_services")
                        .HasColumnType("int");

                    b.Property<int?>("id_meters")
                        .HasColumnType("int");

                    b.Property<string>("previos_readings_value")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("readings_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("readings_value")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id_meter_readings");

                    b.HasIndex("id_housing_and_communal_services");

                    b.HasIndex("id_meter_readings")
                        .IsUnique();

                    b.HasIndex("id_meters");

                    b.ToTable("Meter_Readings");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Meter_Type", b =>
                {
                    b.Property<int>("id_meter_type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_meter_type"));

                    b.Property<string>("meter_type_name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id_meter_type");

                    b.HasIndex("id_meter_type")
                        .IsUnique();

                    b.ToTable("Meter_Type");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Meters", b =>
                {
                    b.Property<int>("id_meters")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_meters"));

                    b.Property<int?>("id_meter_type")
                        .HasColumnType("int");

                    b.Property<int?>("id_users")
                        .HasColumnType("int");

                    b.Property<DateTime?>("instalition_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("last_reading_date")
                        .HasColumnType("datetime2");

                    b.HasKey("id_meters");

                    b.HasIndex("id_meter_type");

                    b.HasIndex("id_meters")
                        .IsUnique();

                    b.HasIndex("id_users");

                    b.ToTable("Meters");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Payments", b =>
                {
                    b.Property<int>("id_payments")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_payments"));

                    b.Property<double?>("amount")
                        .HasColumnType("float");

                    b.Property<int?>("id_payments_method")
                        .HasColumnType("int");

                    b.Property<int?>("id_service_type")
                        .HasColumnType("int");

                    b.Property<int?>("id_users")
                        .HasColumnType("int");

                    b.Property<DateTime?>("payments_date")
                        .HasColumnType("datetime2");

                    b.HasKey("id_payments");

                    b.HasIndex("id_payments")
                        .IsUnique();

                    b.HasIndex("id_payments_method");

                    b.HasIndex("id_service_type");

                    b.HasIndex("id_users");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Payments_Method", b =>
                {
                    b.Property<int>("id_payments_method")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_payments_method"));

                    b.Property<string>("payments_method_name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id_payments_method");

                    b.HasIndex("id_payments_method")
                        .IsUnique();

                    b.ToTable("Payments_Method");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Quick_Answers_Education", b =>
                {
                    b.Property<int>("id_quick_answer_education")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_quick_answer_education"));

                    b.Property<int?>("id_education")
                        .HasColumnType("int");

                    b.Property<string>("quick_answer_education_name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id_quick_answer_education");

                    b.HasIndex("id_education");

                    b.HasIndex("id_quick_answer_education")
                        .IsUnique();

                    b.ToTable("Quick_Answers_Education");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Quick_Answers_Healthcare", b =>
                {
                    b.Property<int>("id_quick_answer_healthcare")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_quick_answer_healthcare"));

                    b.Property<int?>("id_healthcare")
                        .HasColumnType("int");

                    b.Property<string>("quick_answer_healthcare_name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id_quick_answer_healthcare");

                    b.HasIndex("id_healthcare");

                    b.HasIndex("id_quick_answer_healthcare")
                        .IsUnique();

                    b.ToTable("Quick_Answers_Healthcare");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Quick_Answers_Transport", b =>
                {
                    b.Property<int>("id_quick_answer_transport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_quick_answer_transport"));

                    b.Property<int?>("id_transport")
                        .HasColumnType("int");

                    b.Property<string>("quick_answer_transport_name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id_quick_answer_transport");

                    b.HasIndex("id_quick_answer_transport")
                        .IsUnique();

                    b.HasIndex("id_transport");

                    b.ToTable("Quick_Answers_Transport");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Quick_Answers_hcs", b =>
                {
                    b.Property<int>("id_quick_answers_hcs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_quick_answers_hcs"));

                    b.Property<int?>("id_housing_and_communal_services")
                        .HasColumnType("int");

                    b.Property<string>("quick_answers_hcs_content")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("quick_answers_hcs_name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id_quick_answers_hcs");

                    b.HasIndex("id_housing_and_communal_services");

                    b.HasIndex("id_quick_answers_hcs")
                        .IsUnique();

                    b.ToTable("Quick_Answers_hcs");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Reading_History", b =>
                {
                    b.Property<int>("id_reading_history")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_reading_history"));

                    b.Property<int?>("id_housing_and_communal_services")
                        .HasColumnType("int");

                    b.Property<int?>("id_meters")
                        .HasColumnType("int");

                    b.Property<DateTime?>("reading_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("reading_value")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id_reading_history");

                    b.HasIndex("id_housing_and_communal_services");

                    b.HasIndex("id_meters");

                    b.HasIndex("id_reading_history")
                        .IsUnique();

                    b.ToTable("Reading_History");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Requests", b =>
                {
                    b.Property<int>("id_requests")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_requests"));

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int?>("id_type_of_requests")
                        .HasColumnType("int");

                    b.Property<int?>("id_users")
                        .HasColumnType("int");

                    b.Property<string>("request_text")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("response")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id_requests");

                    b.HasIndex("id_requests")
                        .IsUnique();

                    b.HasIndex("id_type_of_requests");

                    b.HasIndex("id_users");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Service_Type", b =>
                {
                    b.Property<int>("id_service_type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_service_type"));

                    b.Property<int?>("id_housing_and_communal_services")
                        .HasColumnType("int");

                    b.Property<string>("service_type_name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id_service_type");

                    b.HasIndex("id_housing_and_communal_services");

                    b.HasIndex("id_service_type")
                        .IsUnique();

                    b.ToTable("Service_Type");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Tariffs", b =>
                {
                    b.Property<int>("id_tariffs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_tariffs"));

                    b.Property<DateTime?>("effective_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("id_housing_and_communal_services")
                        .HasColumnType("int");

                    b.Property<int?>("id_service_type")
                        .HasColumnType("int");

                    b.Property<int?>("id_unit_of_tariffs")
                        .HasColumnType("int");

                    b.Property<double?>("tariff_value")
                        .HasColumnType("float");

                    b.HasKey("id_tariffs");

                    b.HasIndex("id_housing_and_communal_services");

                    b.HasIndex("id_service_type");

                    b.HasIndex("id_tariffs")
                        .IsUnique();

                    b.HasIndex("id_unit_of_tariffs");

                    b.ToTable("Tariffs");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Transport", b =>
                {
                    b.Property<int>("id_transport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_transport"));

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("text_of_request")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id_transport");

                    b.HasIndex("id_transport")
                        .IsUnique();

                    b.ToTable("Transport");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Type_Of_Requests", b =>
                {
                    b.Property<int>("id_type_of_requests")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_type_of_requests"));

                    b.Property<int?>("id_education")
                        .HasColumnType("int");

                    b.Property<int?>("id_healthcare")
                        .HasColumnType("int");

                    b.Property<int?>("id_housing_and_communal_services")
                        .HasColumnType("int");

                    b.Property<int?>("id_transport")
                        .HasColumnType("int");

                    b.HasKey("id_type_of_requests");

                    b.HasIndex("id_education");

                    b.HasIndex("id_healthcare");

                    b.HasIndex("id_housing_and_communal_services");

                    b.HasIndex("id_transport");

                    b.HasIndex("id_type_of_requests")
                        .IsUnique();

                    b.ToTable("Type_Of_Requests");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Unit_Of_Tariffs", b =>
                {
                    b.Property<int>("id_unit_of_tariffs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_unit_of_tariffs"));

                    b.Property<string>("unit_of_tariffs_name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id_unit_of_tariffs");

                    b.HasIndex("id_unit_of_tariffs")
                        .IsUnique();

                    b.ToTable("Unit_Of_Tariffs");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.User_Memory", b =>
                {
                    b.Property<int>("id_user_memory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_user_memory"));

                    b.Property<string>("content_memory")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("id_users")
                        .HasColumnType("int");

                    b.HasKey("id_user_memory");

                    b.HasIndex("id_user_memory")
                        .IsUnique();

                    b.HasIndex("id_users");

                    b.ToTable("User_Memory");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Users", b =>
                {
                    b.Property<int>("id_users")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_users"));

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<double?>("id_telegram")
                        .HasColumnType("float");

                    b.Property<string>("lastname")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("username")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("id_users");

                    b.HasIndex("id_users")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Articles_Housing_Code", b =>
                {
                    b.HasOne("TelegramBot.Domain.src.Entities.Housing_And_Communal_Services", "Housing_And_Communal_Services")
                        .WithMany("Articles_Housing_Code")
                        .HasForeignKey("id_housing_and_communal_services");

                    b.Navigation("Housing_And_Communal_Services");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Meter_Readings", b =>
                {
                    b.HasOne("TelegramBot.Domain.src.Entities.Housing_And_Communal_Services", "Housing_And_Communal_Services")
                        .WithMany("Meter_Readings")
                        .HasForeignKey("id_housing_and_communal_services");

                    b.HasOne("TelegramBot.Domain.src.Entities.Meters", "Meters")
                        .WithMany()
                        .HasForeignKey("id_meters");

                    b.Navigation("Housing_And_Communal_Services");

                    b.Navigation("Meters");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Meters", b =>
                {
                    b.HasOne("TelegramBot.Domain.src.Entities.Meter_Type", "Meter_Type")
                        .WithMany("Meters")
                        .HasForeignKey("id_meter_type");

                    b.HasOne("TelegramBot.Domain.src.Entities.Users", "Users")
                        .WithMany("Meters")
                        .HasForeignKey("id_users");

                    b.Navigation("Meter_Type");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Payments", b =>
                {
                    b.HasOne("TelegramBot.Domain.src.Entities.Payments_Method", "Payments_Method")
                        .WithMany("Payments")
                        .HasForeignKey("id_payments_method");

                    b.HasOne("TelegramBot.Domain.src.Entities.Service_Type", "Service_Type")
                        .WithMany()
                        .HasForeignKey("id_service_type");

                    b.HasOne("TelegramBot.Domain.src.Entities.Users", "Users")
                        .WithMany("Payments")
                        .HasForeignKey("id_users");

                    b.Navigation("Payments_Method");

                    b.Navigation("Service_Type");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Quick_Answers_Education", b =>
                {
                    b.HasOne("TelegramBot.Domain.src.Entities.Education", "Education")
                        .WithMany("Quick_Answers_Education")
                        .HasForeignKey("id_education");

                    b.Navigation("Education");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Quick_Answers_Healthcare", b =>
                {
                    b.HasOne("TelegramBot.Domain.src.Entities.Healthcare", "Healthcare")
                        .WithMany("Quick_Answers_Healthcare")
                        .HasForeignKey("id_healthcare");

                    b.Navigation("Healthcare");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Quick_Answers_Transport", b =>
                {
                    b.HasOne("TelegramBot.Domain.src.Entities.Transport", "Transport")
                        .WithMany("Quick_Answers_Transport")
                        .HasForeignKey("id_transport");

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Quick_Answers_hcs", b =>
                {
                    b.HasOne("TelegramBot.Domain.src.Entities.Housing_And_Communal_Services", "Housing_And_Communal_Services")
                        .WithMany("Quick_Answers_hcs")
                        .HasForeignKey("id_housing_and_communal_services");

                    b.Navigation("Housing_And_Communal_Services");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Reading_History", b =>
                {
                    b.HasOne("TelegramBot.Domain.src.Entities.Housing_And_Communal_Services", "Housing_And_Communal_Services")
                        .WithMany("Reading_History")
                        .HasForeignKey("id_housing_and_communal_services");

                    b.HasOne("TelegramBot.Domain.src.Entities.Meters", "Meters")
                        .WithMany()
                        .HasForeignKey("id_meters");

                    b.Navigation("Housing_And_Communal_Services");

                    b.Navigation("Meters");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Requests", b =>
                {
                    b.HasOne("TelegramBot.Domain.src.Entities.Type_Of_Requests", "Type_Of_Requests")
                        .WithMany()
                        .HasForeignKey("id_type_of_requests");

                    b.HasOne("TelegramBot.Domain.src.Entities.Users", "Users")
                        .WithMany("Requests")
                        .HasForeignKey("id_users");

                    b.Navigation("Type_Of_Requests");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Service_Type", b =>
                {
                    b.HasOne("TelegramBot.Domain.src.Entities.Housing_And_Communal_Services", "Housing_And_Communal_Services")
                        .WithMany("Service_Type")
                        .HasForeignKey("id_housing_and_communal_services");

                    b.Navigation("Housing_And_Communal_Services");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Tariffs", b =>
                {
                    b.HasOne("TelegramBot.Domain.src.Entities.Housing_And_Communal_Services", "Housing_And_Communal_Services")
                        .WithMany("Tariffs")
                        .HasForeignKey("id_housing_and_communal_services");

                    b.HasOne("TelegramBot.Domain.src.Entities.Service_Type", "Service_Type")
                        .WithMany()
                        .HasForeignKey("id_service_type");

                    b.HasOne("TelegramBot.Domain.src.Entities.Unit_Of_Tariffs", "Unit_Of_Tariffs")
                        .WithMany("Tariffs")
                        .HasForeignKey("id_unit_of_tariffs");

                    b.Navigation("Housing_And_Communal_Services");

                    b.Navigation("Service_Type");

                    b.Navigation("Unit_Of_Tariffs");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Type_Of_Requests", b =>
                {
                    b.HasOne("TelegramBot.Domain.src.Entities.Education", "Education")
                        .WithMany("Type_Of_Requests")
                        .HasForeignKey("id_education");

                    b.HasOne("TelegramBot.Domain.src.Entities.Healthcare", "Healthcare")
                        .WithMany("Type_Of_Requests")
                        .HasForeignKey("id_healthcare");

                    b.HasOne("TelegramBot.Domain.src.Entities.Housing_And_Communal_Services", "Housing_And_Communal_Services")
                        .WithMany("Type_Of_Requests")
                        .HasForeignKey("id_housing_and_communal_services");

                    b.HasOne("TelegramBot.Domain.src.Entities.Transport", "Transport")
                        .WithMany("Type_Of_Requests")
                        .HasForeignKey("id_transport");

                    b.Navigation("Education");

                    b.Navigation("Healthcare");

                    b.Navigation("Housing_And_Communal_Services");

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.User_Memory", b =>
                {
                    b.HasOne("TelegramBot.Domain.src.Entities.Users", "Users")
                        .WithMany("User_Memory")
                        .HasForeignKey("id_users");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Education", b =>
                {
                    b.Navigation("Quick_Answers_Education");

                    b.Navigation("Type_Of_Requests");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Healthcare", b =>
                {
                    b.Navigation("Quick_Answers_Healthcare");

                    b.Navigation("Type_Of_Requests");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Housing_And_Communal_Services", b =>
                {
                    b.Navigation("Articles_Housing_Code");

                    b.Navigation("Meter_Readings");

                    b.Navigation("Quick_Answers_hcs");

                    b.Navigation("Reading_History");

                    b.Navigation("Service_Type");

                    b.Navigation("Tariffs");

                    b.Navigation("Type_Of_Requests");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Meter_Type", b =>
                {
                    b.Navigation("Meters");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Payments_Method", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Transport", b =>
                {
                    b.Navigation("Quick_Answers_Transport");

                    b.Navigation("Type_Of_Requests");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Unit_Of_Tariffs", b =>
                {
                    b.Navigation("Tariffs");
                });

            modelBuilder.Entity("TelegramBot.Domain.src.Entities.Users", b =>
                {
                    b.Navigation("Meters");

                    b.Navigation("Payments");

                    b.Navigation("Requests");

                    b.Navigation("User_Memory");
                });
#pragma warning restore 612, 618
        }
    }
}
