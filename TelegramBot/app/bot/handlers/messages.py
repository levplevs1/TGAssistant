from app.bot.handlers import waiting_for_response, users_status_service
from app.bot.handlers.llm_response_handler import handle_user_message, forming_response, check_save_user_memory
from app.bot.handlers.murkup_button import send_categories
from classifier.base_classifier import get_keyboard
from utils.tokens import validate_count_tokens
from config import bot
from utils.save_load import get_last_message, recognize_speech
from pydub import AudioSegment
from os import remove
from database.load import get_user_database, get_service_type_database


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(content_types=['voice'])
def handle_voice_message(message):
    user_id = message.from_user.id
    file_info = bot.get_file(message.voice.file_id)
    downloaded_file = bot.download_file(file_info.file_path)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ OGG
    ogg_file_path = f"users_voice_messages/voice_message_{user_id}.ogg"
    with open(ogg_file_path, 'wb') as f:
        f.write(downloaded_file)

    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º OGG –≤ WAV
    wav_file_path = f"users_voice_messages/voice_message_{user_id}.wav"
    audio = AudioSegment.from_ogg(ogg_file_path)
    audio.export(wav_file_path, format="wav")

    # –†–∞—Å–ø–æ–∑–Ω–∞–µ–º —Ä–µ—á—å
    text = recognize_speech(wav_file_path)

    if text:
        print(f'–†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {text}')
        new_message = message
        new_message.text = text

        texts(new_message)
    else:
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")

    # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    remove(ogg_file_path)
    remove(wav_file_path)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
@bot.message_handler(content_types=['photo'])
def handle_photo_and_text(message):
    print("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler()
def texts(message):
    print(123)
    user_id = message.from_user.id
    user_data = get_user_database(user_id)

    if message.text == '–í–æ—Ç —á—Ç–æ —è —É–º–µ—é':
        bot.send_message(message.chat.id, """
<b>–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:</b>

–Ø –≤–∞—à —Ü–∏—Ñ—Ä–æ–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è –ø–æ–º–æ—â–∏ –≤ —Ä–µ—à–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —É—Å–ª—É–≥–∞–º–∏. –í–æ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:

- üè† <b>–ñ–ö–•</b>: –û–ø–ª–∞—Ç–∞ –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã—Ö —É—Å–ª—É–≥, –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞, –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–æ–∫.
- üè• <b>–ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ</b>: –ó–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–∏—ë–º –∫ –≤—Ä–∞—á—É, –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª—å–≥–æ—Ç–∞—Ö, —Å–ø—Ä–∞–≤–∫–∞—Ö –∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏—è—Ö.
- üéì <b>–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</b>: –ü–æ–º–æ—â—å —Å –ø–æ–¥–∞—á–µ–π –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ —É—á–µ–±–Ω—ã–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è, –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–æ–∫ –æ–± –æ–±—É—á–µ–Ω–∏–∏.
- üöó <b>–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç</b>: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞, –ø—Ä–æ–≤–µ—Ä–∫–∞ —à—Ç—Ä–∞—Ñ–æ–≤, –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö –ø—Ä–∞–≤–∞—Ö.
- üí≥ <b>–û–ø–ª–∞—Ç–∞ —É—Å–ª—É–≥</b>: –ü—Ä–æ—Å—Ç–∞—è –∏ –±—ã—Å—Ç—Ä–∞—è –æ–ø–ª–∞—Ç–∞ –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã—Ö –∏ –¥—Ä—É–≥–∏—Ö —É—Å–ª—É–≥.

üîç –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É <b>/menu</b>, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é —É—Å–ª—É–≥.
üî¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /counters —á—Ç–æ –±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤
---

üí° <b>–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:</b>
- "–ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –≤—Ä–∞—á—É —á–µ—Ä–µ–∑ –ø–æ—Ä—Ç–∞–ª –≥–æ—Å—É—Å–ª—É–≥?"
- "–û–ø–ª–∞—Ç–∏—Ç—å —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ: –¥–µ–Ω—å 1689, –Ω–æ—á—å 521"
- "–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –≤—É–∑?"
- "–û–ø–ª–∞—Ç–∏ –≤–æ–¥—É: —Ö–æ–ª–æ–¥–Ω–∞—è 319, –≥–æ—Ä—è—á–∞—è 501"

---

<b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>
- üíæ <b>–ö–æ–Ω—Ç–µ–∫—Å—Ç:</b> –Ø –ø–æ–º–Ω—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –≤–∞—à–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤.
- üßÆ <b>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ:</b> –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—á—ë—Ç—á–∏–∫–æ–≤ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è.
- üìå <b>–ó–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É:</b> –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /–∑–∞–ø–æ–º–Ω–∏ (—Ñ—Ä–∞–∑–∞), —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.


---

–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å! ‚ú®
""", parse_mode="HTML")
        return

    if user_data is None:
        print("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.")
        return

    if get_service_type_database(user_id) == "":
        send_categories(message)
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ª–∏ —É—Å–ª—É–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if users_status_service.get(user_id, False):
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –æ–∫–∞–∑–∞–Ω–∏–µ —É—Å–ª—É–≥–∏")
        handle_user_message(message, user_data)
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—Ç–∞
    if waiting_for_response.get(user_id, False):
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ —è –æ–±—Ä–∞–±–æ—Ç–∞—é –≤–∞—à –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∑–∞–ø—Ä–æ—Å.")
        return

    if message.text == "üîÑ–ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç":
        last_message = get_last_message(user_id)
        message_copy = message
        message_copy.text = last_message
        forming_response(message_copy, user_data)
        return
    elif message.text == "‚ùî–ï—â—ë –≤–∞—Ä–∏–∞–Ω—Ç—ã":
        keyboard = get_keyboard(user_id)
        bot.send_message(message.chat.id, "–í–æ—Ç –µ—â—ë –≤–∞—Ä–∏–∞–Ω—Ç—ã" , reply_markup=keyboard)
        return

    if validate_count_tokens(message.text, 500):
        bot.send_message(message.chat.id, "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ")
        return

    if check_save_user_memory(message) is not True:
        forming_response(message,user_data)


