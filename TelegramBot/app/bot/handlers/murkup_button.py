from app.bot.handlers.llm_response_handler import forming_response
from classifier.base_classifier import process_callback_data
from config import bot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from app.bot.handlers import users_status_service
from utils.save_load import save_category_dialog, get_last_message, search_query_by_response, load_user_data


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
@bot.message_handler(commands=["menu"])
def send_categories(message):
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    markup = InlineKeyboardMarkup()

    markup.add(InlineKeyboardButton("–ñ–ö–•", callback_data="–ñ–ö–•")),
    markup.add(InlineKeyboardButton("–ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ", callback_data="–ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ"))
    markup.add(InlineKeyboardButton("–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", callback_data="–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ"))
    markup.add(InlineKeyboardButton("–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", callback_data="–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç"))

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    if call.data == "–û–ø–ª–∞—Ç–∏—Ç—å —Å—á–µ—Ç—á–∏–∫–∏":
        markup = get_markup_counters()
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="–ö–∞–∫–æ–π —Å—á–µ—Ç—á–∏–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å?", reply_markup=markup)
    elif call.data == '–≤—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ':
        markup = get_markup_like_dislike_change()
        bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=markup)
    elif call.data == 'change':
        last_message = search_query_by_response(user_id=call.from_user.id, response=call.message.text)

        class Message:
            def __init__(self, data):
                # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–ª–æ–≤–∞—Ä–∏ –≤ –æ–±—ä–µ–∫—Ç—ã
                for key, value in data.items():
                    if isinstance(value, dict):
                        setattr(self, key, Message(value))
                    else:
                        setattr(self, key, value)

        message_copy = {
                        "is_copy": True,
                        "message_id": int,
                        "from_user": {
                            "id": call.from_user.id,
                        },
                        "chat": {
                            "id": call.message.chat.id,
                        },
                        "text": last_message,
                    }
        message_copy = Message(message_copy)
        forming_response(message_copy, load_user_data(call.from_user.id))
    elif call.data == 'like':
        print('like')
    elif call.data == 'dislike':
        print('dislike')
    elif call.data == "–ñ–ö–•":
        save_category_dialog(call.from_user.id, call.data)
        bot.send_message(call.message.chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: –ñ–ö–•")
    elif call.data == "–ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ":
        save_category_dialog(call.from_user.id, call.data)
        bot.send_message(call.message.chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: –ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ")
    elif call.data == "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ":
        save_category_dialog(call.from_user.id, call.data)
        bot.send_message(call.message.chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ")
    elif call.data == "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç":
        save_category_dialog(call.from_user.id, call.data)
        bot.send_message(call.message.chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç")
    elif any(word in call.data for word in ['–≥–∞–∑', '–≤–æ–¥–∞', '–æ—Ç–æ–ø–ª–µ–Ω–∏–µ', '—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ']):
        process_callback_data(call.from_user.id, call.message.chat.id, call.data, None)
    elif call.data == '–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å':
        bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      reply_markup=None)
    elif call.data == '–æ—Ç–ø—Ä–∞–≤–∏—Ç—å':

        user_service = users_status_service.get(call.from_user.id, None)

        if user_service is None:
            bot.send_message(call.message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ —É—Å–ª—É–≥–∏")
            return

        stub(call.message.chat.id, user_service, call.from_user.id)
        bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      reply_markup=None)
def stub(chat_id, user_service, user_id):
    bot.send_message(chat_id, f"–û–ø–ª–∞—á–µ–Ω —Å—á–µ—Ç—á–∏–∫: {user_service.get('category', None)}")
    users_status_service.pop(user_id)

def get_markup_like_dislike_change():
    markup = InlineKeyboardMarkup()

    like = InlineKeyboardButton('üëç', callback_data='like')
    dislike = InlineKeyboardButton('üëé', callback_data='dislike')
    change = InlineKeyboardButton('üîÑ–ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç', callback_data='change')


    markup.add(like, dislike)
    markup.add(change)

    return markup

def get_markup_counters():

    markup = InlineKeyboardMarkup()

    markup.add(InlineKeyboardButton("–ì–∞–∑", callback_data="–≥–∞–∑")),
    markup.add(InlineKeyboardButton("–í–æ–¥–∞", callback_data="–≤–æ–¥–∞"))
    markup.add(InlineKeyboardButton("–û—Ç–æ–ø–ª–µ–Ω–∏–µ", callback_data="–æ—Ç–æ–ø–ª–µ–Ω–∏–µ"))
    markup.add(InlineKeyboardButton("–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ", callback_data="—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ"))
    return markup



